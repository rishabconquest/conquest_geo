# coding: utf-8

"""
    Conquest API v4

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ConquestApiAddDocumentResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'document': 'ConquestApiDocument',
        'upload_expire_time': 'datetime',
        'upload_headers': 'dict(str, str)',
        'upload_method': 'str',
        'upload_uri': 'str'
    }

    attribute_map = {
        'document': 'Document',
        'upload_expire_time': 'UploadExpireTime',
        'upload_headers': 'UploadHeaders',
        'upload_method': 'UploadMethod',
        'upload_uri': 'UploadUri'
    }

    def __init__(self, document=None, upload_expire_time=None, upload_headers=None, upload_method=None, upload_uri=None):  # noqa: E501
        """ConquestApiAddDocumentResult - a model defined in Swagger"""  # noqa: E501
        self._document = None
        self._upload_expire_time = None
        self._upload_headers = None
        self._upload_method = None
        self._upload_uri = None
        self.discriminator = None
        if document is not None:
            self.document = document
        if upload_expire_time is not None:
            self.upload_expire_time = upload_expire_time
        if upload_headers is not None:
            self.upload_headers = upload_headers
        if upload_method is not None:
            self.upload_method = upload_method
        if upload_uri is not None:
            self.upload_uri = upload_uri

    @property
    def document(self):
        """Gets the document of this ConquestApiAddDocumentResult.  # noqa: E501


        :return: The document of this ConquestApiAddDocumentResult.  # noqa: E501
        :rtype: ConquestApiDocument
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this ConquestApiAddDocumentResult.


        :param document: The document of this ConquestApiAddDocumentResult.  # noqa: E501
        :type: ConquestApiDocument
        """

        self._document = document

    @property
    def upload_expire_time(self):
        """Gets the upload_expire_time of this ConquestApiAddDocumentResult.  # noqa: E501


        :return: The upload_expire_time of this ConquestApiAddDocumentResult.  # noqa: E501
        :rtype: datetime
        """
        return self._upload_expire_time

    @upload_expire_time.setter
    def upload_expire_time(self, upload_expire_time):
        """Sets the upload_expire_time of this ConquestApiAddDocumentResult.


        :param upload_expire_time: The upload_expire_time of this ConquestApiAddDocumentResult.  # noqa: E501
        :type: datetime
        """

        self._upload_expire_time = upload_expire_time

    @property
    def upload_headers(self):
        """Gets the upload_headers of this ConquestApiAddDocumentResult.  # noqa: E501


        :return: The upload_headers of this ConquestApiAddDocumentResult.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._upload_headers

    @upload_headers.setter
    def upload_headers(self, upload_headers):
        """Sets the upload_headers of this ConquestApiAddDocumentResult.


        :param upload_headers: The upload_headers of this ConquestApiAddDocumentResult.  # noqa: E501
        :type: dict(str, str)
        """

        self._upload_headers = upload_headers

    @property
    def upload_method(self):
        """Gets the upload_method of this ConquestApiAddDocumentResult.  # noqa: E501


        :return: The upload_method of this ConquestApiAddDocumentResult.  # noqa: E501
        :rtype: str
        """
        return self._upload_method

    @upload_method.setter
    def upload_method(self, upload_method):
        """Sets the upload_method of this ConquestApiAddDocumentResult.


        :param upload_method: The upload_method of this ConquestApiAddDocumentResult.  # noqa: E501
        :type: str
        """

        self._upload_method = upload_method

    @property
    def upload_uri(self):
        """Gets the upload_uri of this ConquestApiAddDocumentResult.  # noqa: E501

        UploadUri is where you must post the UploadData. It is a multipart HTTP upload with the field \"document\" for which the document is uploaded to.  For example, you can upload 'inspection-photo.png' like this for a standard web form ```   curl -i -X POST -H \"Content-Type: multipart/form-data\" -F \"document=@inspection-photo.png\" \"${ApiHost}${UploadUri}\" ```  Alternatively, use if no metadata needs to be submitted. ```   curl --upload-file \"${ApiHost}${UploadUri}\" ```  If the Uri is relative, prefix it with the api origin.  UploadUri will be empty if: - The Added Document was a link to an existing document (LinkExistingDocument=true) - The Document Link is not relative to one of the Document Locations (see GetHierarchyNodesQuery{ObjectType=DocumentContainer})  # noqa: E501

        :return: The upload_uri of this ConquestApiAddDocumentResult.  # noqa: E501
        :rtype: str
        """
        return self._upload_uri

    @upload_uri.setter
    def upload_uri(self, upload_uri):
        """Sets the upload_uri of this ConquestApiAddDocumentResult.

        UploadUri is where you must post the UploadData. It is a multipart HTTP upload with the field \"document\" for which the document is uploaded to.  For example, you can upload 'inspection-photo.png' like this for a standard web form ```   curl -i -X POST -H \"Content-Type: multipart/form-data\" -F \"document=@inspection-photo.png\" \"${ApiHost}${UploadUri}\" ```  Alternatively, use if no metadata needs to be submitted. ```   curl --upload-file \"${ApiHost}${UploadUri}\" ```  If the Uri is relative, prefix it with the api origin.  UploadUri will be empty if: - The Added Document was a link to an existing document (LinkExistingDocument=true) - The Document Link is not relative to one of the Document Locations (see GetHierarchyNodesQuery{ObjectType=DocumentContainer})  # noqa: E501

        :param upload_uri: The upload_uri of this ConquestApiAddDocumentResult.  # noqa: E501
        :type: str
        """

        self._upload_uri = upload_uri

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiAddDocumentResult, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiAddDocumentResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
