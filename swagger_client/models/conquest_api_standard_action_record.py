# coding: utf-8

"""
    Conquest API v4

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ConquestApiStandardActionRecord(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account': 'str',
        'action_category': 'int',
        'action_task_list': 'ConquestApiActionTaskList',
        'action_type': 'ConquestApiActionType',
        'completed_icon_file': 'ConquestApiStyle',
        'department': 'int',
        'dim_rate_multiplier': 'int',
        'icon_file': 'ConquestApiStyle',
        'new_works': 'bool',
        'rehabilitation': 'bool',
        'request_response': 'bool',
        'std_action_description': 'str',
        'urgency': 'int'
    }

    attribute_map = {
        'account': 'Account',
        'action_category': 'ActionCategory',
        'action_task_list': 'ActionTaskList',
        'action_type': 'ActionType',
        'completed_icon_file': 'CompletedIconFile',
        'department': 'Department',
        'dim_rate_multiplier': 'DimRateMultiplier',
        'icon_file': 'IconFile',
        'new_works': 'NewWorks',
        'rehabilitation': 'Rehabilitation',
        'request_response': 'RequestResponse',
        'std_action_description': 'StdActionDescription',
        'urgency': 'Urgency'
    }

    def __init__(self, account=None, action_category=None, action_task_list=None, action_type=None, completed_icon_file=None, department=None, dim_rate_multiplier=None, icon_file=None, new_works=None, rehabilitation=None, request_response=None, std_action_description=None, urgency=None):  # noqa: E501
        """ConquestApiStandardActionRecord - a model defined in Swagger"""  # noqa: E501
        self._account = None
        self._action_category = None
        self._action_task_list = None
        self._action_type = None
        self._completed_icon_file = None
        self._department = None
        self._dim_rate_multiplier = None
        self._icon_file = None
        self._new_works = None
        self._rehabilitation = None
        self._request_response = None
        self._std_action_description = None
        self._urgency = None
        self.discriminator = None
        if account is not None:
            self.account = account
        if action_category is not None:
            self.action_category = action_category
        if action_task_list is not None:
            self.action_task_list = action_task_list
        if action_type is not None:
            self.action_type = action_type
        if completed_icon_file is not None:
            self.completed_icon_file = completed_icon_file
        if department is not None:
            self.department = department
        if dim_rate_multiplier is not None:
            self.dim_rate_multiplier = dim_rate_multiplier
        if icon_file is not None:
            self.icon_file = icon_file
        if new_works is not None:
            self.new_works = new_works
        if rehabilitation is not None:
            self.rehabilitation = rehabilitation
        if request_response is not None:
            self.request_response = request_response
        if std_action_description is not None:
            self.std_action_description = std_action_description
        if urgency is not None:
            self.urgency = urgency

    @property
    def account(self):
        """Gets the account of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The account of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this ConquestApiStandardActionRecord.


        :param account: The account of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: str
        """

        self._account = account

    @property
    def action_category(self):
        """Gets the action_category of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The action_category of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: int
        """
        return self._action_category

    @action_category.setter
    def action_category(self, action_category):
        """Sets the action_category of this ConquestApiStandardActionRecord.


        :param action_category: The action_category of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: int
        """

        self._action_category = action_category

    @property
    def action_task_list(self):
        """Gets the action_task_list of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The action_task_list of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: ConquestApiActionTaskList
        """
        return self._action_task_list

    @action_task_list.setter
    def action_task_list(self, action_task_list):
        """Sets the action_task_list of this ConquestApiStandardActionRecord.


        :param action_task_list: The action_task_list of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: ConquestApiActionTaskList
        """

        self._action_task_list = action_task_list

    @property
    def action_type(self):
        """Gets the action_type of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The action_type of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: ConquestApiActionType
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this ConquestApiStandardActionRecord.


        :param action_type: The action_type of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: ConquestApiActionType
        """

        self._action_type = action_type

    @property
    def completed_icon_file(self):
        """Gets the completed_icon_file of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The completed_icon_file of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: ConquestApiStyle
        """
        return self._completed_icon_file

    @completed_icon_file.setter
    def completed_icon_file(self, completed_icon_file):
        """Sets the completed_icon_file of this ConquestApiStandardActionRecord.


        :param completed_icon_file: The completed_icon_file of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: ConquestApiStyle
        """

        self._completed_icon_file = completed_icon_file

    @property
    def department(self):
        """Gets the department of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The department of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: int
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this ConquestApiStandardActionRecord.


        :param department: The department of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: int
        """

        self._department = department

    @property
    def dim_rate_multiplier(self):
        """Gets the dim_rate_multiplier of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The dim_rate_multiplier of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: int
        """
        return self._dim_rate_multiplier

    @dim_rate_multiplier.setter
    def dim_rate_multiplier(self, dim_rate_multiplier):
        """Sets the dim_rate_multiplier of this ConquestApiStandardActionRecord.


        :param dim_rate_multiplier: The dim_rate_multiplier of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: int
        """

        self._dim_rate_multiplier = dim_rate_multiplier

    @property
    def icon_file(self):
        """Gets the icon_file of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The icon_file of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: ConquestApiStyle
        """
        return self._icon_file

    @icon_file.setter
    def icon_file(self, icon_file):
        """Sets the icon_file of this ConquestApiStandardActionRecord.


        :param icon_file: The icon_file of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: ConquestApiStyle
        """

        self._icon_file = icon_file

    @property
    def new_works(self):
        """Gets the new_works of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The new_works of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: bool
        """
        return self._new_works

    @new_works.setter
    def new_works(self, new_works):
        """Sets the new_works of this ConquestApiStandardActionRecord.


        :param new_works: The new_works of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: bool
        """

        self._new_works = new_works

    @property
    def rehabilitation(self):
        """Gets the rehabilitation of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The rehabilitation of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: bool
        """
        return self._rehabilitation

    @rehabilitation.setter
    def rehabilitation(self, rehabilitation):
        """Sets the rehabilitation of this ConquestApiStandardActionRecord.


        :param rehabilitation: The rehabilitation of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: bool
        """

        self._rehabilitation = rehabilitation

    @property
    def request_response(self):
        """Gets the request_response of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The request_response of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: bool
        """
        return self._request_response

    @request_response.setter
    def request_response(self, request_response):
        """Sets the request_response of this ConquestApiStandardActionRecord.


        :param request_response: The request_response of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: bool
        """

        self._request_response = request_response

    @property
    def std_action_description(self):
        """Gets the std_action_description of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The std_action_description of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: str
        """
        return self._std_action_description

    @std_action_description.setter
    def std_action_description(self, std_action_description):
        """Sets the std_action_description of this ConquestApiStandardActionRecord.


        :param std_action_description: The std_action_description of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: str
        """

        self._std_action_description = std_action_description

    @property
    def urgency(self):
        """Gets the urgency of this ConquestApiStandardActionRecord.  # noqa: E501


        :return: The urgency of this ConquestApiStandardActionRecord.  # noqa: E501
        :rtype: int
        """
        return self._urgency

    @urgency.setter
    def urgency(self, urgency):
        """Sets the urgency of this ConquestApiStandardActionRecord.


        :param urgency: The urgency of this ConquestApiStandardActionRecord.  # noqa: E501
        :type: int
        """

        self._urgency = urgency

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiStandardActionRecord, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiStandardActionRecord):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
