# coding: utf-8

"""
    Conquest API v4

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ConquestApiAnyValue(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'boolean_value': 'bool',
        'code_value': 'int',
        'date_time_value': 'datetime',
        'date_value': 'datetime',
        'decimal_value': 'ConquestApiDecimal',
        'enumeration_value': 'int',
        'geography_data_value': 'ConquestApiGeographyData',
        'geometry_data_value': 'ConquestApiGeometryData',
        'hierarchy_value': 'ConquestApiObjectKey',
        'int32_value': 'int',
        'int64_value': 'str',
        'n_boolean_value': 'bool',
        'n_code_value': 'int',
        'n_date_time_value': 'ConquestApiTimestampValue',
        'n_date_value': 'ConquestApiTimestampValue',
        'n_decimal_value': 'ConquestApiDecimalValue',
        'n_enumeration_value': 'int',
        'n_geography_data_value': 'ConquestApiGeographyDataValue',
        'n_geometry_data_value': 'ConquestApiGeometryDataValue',
        'n_hierarchy_value': 'ConquestApiObjectKeyValue',
        'n_int32_value': 'int',
        'n_int64_value': 'str',
        'n_number_value': 'float',
        'n_object_key_value': 'ConquestApiObjectKeyValue',
        'n_string_value': 'str',
        'number_value': 'float',
        'object_key_value': 'ConquestApiObjectKey',
        'string_list_value': 'ConquestApiStringListValue',
        'string_value': 'str',
        'style_value': 'ConquestApiStyle',
        'unknown_value': 'bool'
    }

    attribute_map = {
        'boolean_value': 'booleanValue',
        'code_value': 'codeValue',
        'date_time_value': 'dateTimeValue',
        'date_value': 'dateValue',
        'decimal_value': 'decimalValue',
        'enumeration_value': 'enumerationValue',
        'geography_data_value': 'geographyDataValue',
        'geometry_data_value': 'geometryDataValue',
        'hierarchy_value': 'hierarchyValue',
        'int32_value': 'int32Value',
        'int64_value': 'int64Value',
        'n_boolean_value': 'nBooleanValue',
        'n_code_value': 'nCodeValue',
        'n_date_time_value': 'nDateTimeValue',
        'n_date_value': 'nDateValue',
        'n_decimal_value': 'nDecimalValue',
        'n_enumeration_value': 'nEnumerationValue',
        'n_geography_data_value': 'nGeographyDataValue',
        'n_geometry_data_value': 'nGeometryDataValue',
        'n_hierarchy_value': 'nHierarchyValue',
        'n_int32_value': 'nInt32Value',
        'n_int64_value': 'nInt64Value',
        'n_number_value': 'nNumberValue',
        'n_object_key_value': 'nObjectKeyValue',
        'n_string_value': 'nStringValue',
        'number_value': 'numberValue',
        'object_key_value': 'objectKeyValue',
        'string_list_value': 'stringListValue',
        'string_value': 'stringValue',
        'style_value': 'styleValue',
        'unknown_value': 'unknownValue'
    }

    def __init__(self, boolean_value=None, code_value=None, date_time_value=None, date_value=None, decimal_value=None, enumeration_value=None, geography_data_value=None, geometry_data_value=None, hierarchy_value=None, int32_value=None, int64_value=None, n_boolean_value=None, n_code_value=None, n_date_time_value=None, n_date_value=None, n_decimal_value=None, n_enumeration_value=None, n_geography_data_value=None, n_geometry_data_value=None, n_hierarchy_value=None, n_int32_value=None, n_int64_value=None, n_number_value=None, n_object_key_value=None, n_string_value=None, number_value=None, object_key_value=None, string_list_value=None, string_value=None, style_value=None, unknown_value=None):  # noqa: E501
        """ConquestApiAnyValue - a model defined in Swagger"""  # noqa: E501
        self._boolean_value = None
        self._code_value = None
        self._date_time_value = None
        self._date_value = None
        self._decimal_value = None
        self._enumeration_value = None
        self._geography_data_value = None
        self._geometry_data_value = None
        self._hierarchy_value = None
        self._int32_value = None
        self._int64_value = None
        self._n_boolean_value = None
        self._n_code_value = None
        self._n_date_time_value = None
        self._n_date_value = None
        self._n_decimal_value = None
        self._n_enumeration_value = None
        self._n_geography_data_value = None
        self._n_geometry_data_value = None
        self._n_hierarchy_value = None
        self._n_int32_value = None
        self._n_int64_value = None
        self._n_number_value = None
        self._n_object_key_value = None
        self._n_string_value = None
        self._number_value = None
        self._object_key_value = None
        self._string_list_value = None
        self._string_value = None
        self._style_value = None
        self._unknown_value = None
        self.discriminator = None
        if boolean_value is not None:
            self.boolean_value = boolean_value
        if code_value is not None:
            self.code_value = code_value
        if date_time_value is not None:
            self.date_time_value = date_time_value
        if date_value is not None:
            self.date_value = date_value
        if decimal_value is not None:
            self.decimal_value = decimal_value
        if enumeration_value is not None:
            self.enumeration_value = enumeration_value
        if geography_data_value is not None:
            self.geography_data_value = geography_data_value
        if geometry_data_value is not None:
            self.geometry_data_value = geometry_data_value
        if hierarchy_value is not None:
            self.hierarchy_value = hierarchy_value
        if int32_value is not None:
            self.int32_value = int32_value
        if int64_value is not None:
            self.int64_value = int64_value
        if n_boolean_value is not None:
            self.n_boolean_value = n_boolean_value
        if n_code_value is not None:
            self.n_code_value = n_code_value
        if n_date_time_value is not None:
            self.n_date_time_value = n_date_time_value
        if n_date_value is not None:
            self.n_date_value = n_date_value
        if n_decimal_value is not None:
            self.n_decimal_value = n_decimal_value
        if n_enumeration_value is not None:
            self.n_enumeration_value = n_enumeration_value
        if n_geography_data_value is not None:
            self.n_geography_data_value = n_geography_data_value
        if n_geometry_data_value is not None:
            self.n_geometry_data_value = n_geometry_data_value
        if n_hierarchy_value is not None:
            self.n_hierarchy_value = n_hierarchy_value
        if n_int32_value is not None:
            self.n_int32_value = n_int32_value
        if n_int64_value is not None:
            self.n_int64_value = n_int64_value
        if n_number_value is not None:
            self.n_number_value = n_number_value
        if n_object_key_value is not None:
            self.n_object_key_value = n_object_key_value
        if n_string_value is not None:
            self.n_string_value = n_string_value
        if number_value is not None:
            self.number_value = number_value
        if object_key_value is not None:
            self.object_key_value = object_key_value
        if string_list_value is not None:
            self.string_list_value = string_list_value
        if string_value is not None:
            self.string_value = string_value
        if style_value is not None:
            self.style_value = style_value
        if unknown_value is not None:
            self.unknown_value = unknown_value

    @property
    def boolean_value(self):
        """Gets the boolean_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The boolean_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: bool
        """
        return self._boolean_value

    @boolean_value.setter
    def boolean_value(self, boolean_value):
        """Sets the boolean_value of this ConquestApiAnyValue.


        :param boolean_value: The boolean_value of this ConquestApiAnyValue.  # noqa: E501
        :type: bool
        """

        self._boolean_value = boolean_value

    @property
    def code_value(self):
        """Gets the code_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The code_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: int
        """
        return self._code_value

    @code_value.setter
    def code_value(self, code_value):
        """Sets the code_value of this ConquestApiAnyValue.


        :param code_value: The code_value of this ConquestApiAnyValue.  # noqa: E501
        :type: int
        """

        self._code_value = code_value

    @property
    def date_time_value(self):
        """Gets the date_time_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The date_time_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: datetime
        """
        return self._date_time_value

    @date_time_value.setter
    def date_time_value(self, date_time_value):
        """Sets the date_time_value of this ConquestApiAnyValue.


        :param date_time_value: The date_time_value of this ConquestApiAnyValue.  # noqa: E501
        :type: datetime
        """

        self._date_time_value = date_time_value

    @property
    def date_value(self):
        """Gets the date_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The date_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: datetime
        """
        return self._date_value

    @date_value.setter
    def date_value(self, date_value):
        """Sets the date_value of this ConquestApiAnyValue.


        :param date_value: The date_value of this ConquestApiAnyValue.  # noqa: E501
        :type: datetime
        """

        self._date_value = date_value

    @property
    def decimal_value(self):
        """Gets the decimal_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The decimal_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiDecimal
        """
        return self._decimal_value

    @decimal_value.setter
    def decimal_value(self, decimal_value):
        """Sets the decimal_value of this ConquestApiAnyValue.


        :param decimal_value: The decimal_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiDecimal
        """

        self._decimal_value = decimal_value

    @property
    def enumeration_value(self):
        """Gets the enumeration_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The enumeration_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: int
        """
        return self._enumeration_value

    @enumeration_value.setter
    def enumeration_value(self, enumeration_value):
        """Sets the enumeration_value of this ConquestApiAnyValue.


        :param enumeration_value: The enumeration_value of this ConquestApiAnyValue.  # noqa: E501
        :type: int
        """

        self._enumeration_value = enumeration_value

    @property
    def geography_data_value(self):
        """Gets the geography_data_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The geography_data_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiGeographyData
        """
        return self._geography_data_value

    @geography_data_value.setter
    def geography_data_value(self, geography_data_value):
        """Sets the geography_data_value of this ConquestApiAnyValue.


        :param geography_data_value: The geography_data_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiGeographyData
        """

        self._geography_data_value = geography_data_value

    @property
    def geometry_data_value(self):
        """Gets the geometry_data_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The geometry_data_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiGeometryData
        """
        return self._geometry_data_value

    @geometry_data_value.setter
    def geometry_data_value(self, geometry_data_value):
        """Sets the geometry_data_value of this ConquestApiAnyValue.


        :param geometry_data_value: The geometry_data_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiGeometryData
        """

        self._geometry_data_value = geometry_data_value

    @property
    def hierarchy_value(self):
        """Gets the hierarchy_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The hierarchy_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiObjectKey
        """
        return self._hierarchy_value

    @hierarchy_value.setter
    def hierarchy_value(self, hierarchy_value):
        """Sets the hierarchy_value of this ConquestApiAnyValue.


        :param hierarchy_value: The hierarchy_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiObjectKey
        """

        self._hierarchy_value = hierarchy_value

    @property
    def int32_value(self):
        """Gets the int32_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The int32_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: int
        """
        return self._int32_value

    @int32_value.setter
    def int32_value(self, int32_value):
        """Sets the int32_value of this ConquestApiAnyValue.


        :param int32_value: The int32_value of this ConquestApiAnyValue.  # noqa: E501
        :type: int
        """

        self._int32_value = int32_value

    @property
    def int64_value(self):
        """Gets the int64_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The int64_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: str
        """
        return self._int64_value

    @int64_value.setter
    def int64_value(self, int64_value):
        """Sets the int64_value of this ConquestApiAnyValue.


        :param int64_value: The int64_value of this ConquestApiAnyValue.  # noqa: E501
        :type: str
        """

        self._int64_value = int64_value

    @property
    def n_boolean_value(self):
        """Gets the n_boolean_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_boolean_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: bool
        """
        return self._n_boolean_value

    @n_boolean_value.setter
    def n_boolean_value(self, n_boolean_value):
        """Sets the n_boolean_value of this ConquestApiAnyValue.


        :param n_boolean_value: The n_boolean_value of this ConquestApiAnyValue.  # noqa: E501
        :type: bool
        """

        self._n_boolean_value = n_boolean_value

    @property
    def n_code_value(self):
        """Gets the n_code_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_code_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: int
        """
        return self._n_code_value

    @n_code_value.setter
    def n_code_value(self, n_code_value):
        """Sets the n_code_value of this ConquestApiAnyValue.


        :param n_code_value: The n_code_value of this ConquestApiAnyValue.  # noqa: E501
        :type: int
        """

        self._n_code_value = n_code_value

    @property
    def n_date_time_value(self):
        """Gets the n_date_time_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_date_time_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiTimestampValue
        """
        return self._n_date_time_value

    @n_date_time_value.setter
    def n_date_time_value(self, n_date_time_value):
        """Sets the n_date_time_value of this ConquestApiAnyValue.


        :param n_date_time_value: The n_date_time_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiTimestampValue
        """

        self._n_date_time_value = n_date_time_value

    @property
    def n_date_value(self):
        """Gets the n_date_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_date_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiTimestampValue
        """
        return self._n_date_value

    @n_date_value.setter
    def n_date_value(self, n_date_value):
        """Sets the n_date_value of this ConquestApiAnyValue.


        :param n_date_value: The n_date_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiTimestampValue
        """

        self._n_date_value = n_date_value

    @property
    def n_decimal_value(self):
        """Gets the n_decimal_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_decimal_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiDecimalValue
        """
        return self._n_decimal_value

    @n_decimal_value.setter
    def n_decimal_value(self, n_decimal_value):
        """Sets the n_decimal_value of this ConquestApiAnyValue.


        :param n_decimal_value: The n_decimal_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiDecimalValue
        """

        self._n_decimal_value = n_decimal_value

    @property
    def n_enumeration_value(self):
        """Gets the n_enumeration_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_enumeration_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: int
        """
        return self._n_enumeration_value

    @n_enumeration_value.setter
    def n_enumeration_value(self, n_enumeration_value):
        """Sets the n_enumeration_value of this ConquestApiAnyValue.


        :param n_enumeration_value: The n_enumeration_value of this ConquestApiAnyValue.  # noqa: E501
        :type: int
        """

        self._n_enumeration_value = n_enumeration_value

    @property
    def n_geography_data_value(self):
        """Gets the n_geography_data_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_geography_data_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiGeographyDataValue
        """
        return self._n_geography_data_value

    @n_geography_data_value.setter
    def n_geography_data_value(self, n_geography_data_value):
        """Sets the n_geography_data_value of this ConquestApiAnyValue.


        :param n_geography_data_value: The n_geography_data_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiGeographyDataValue
        """

        self._n_geography_data_value = n_geography_data_value

    @property
    def n_geometry_data_value(self):
        """Gets the n_geometry_data_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_geometry_data_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiGeometryDataValue
        """
        return self._n_geometry_data_value

    @n_geometry_data_value.setter
    def n_geometry_data_value(self, n_geometry_data_value):
        """Sets the n_geometry_data_value of this ConquestApiAnyValue.


        :param n_geometry_data_value: The n_geometry_data_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiGeometryDataValue
        """

        self._n_geometry_data_value = n_geometry_data_value

    @property
    def n_hierarchy_value(self):
        """Gets the n_hierarchy_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_hierarchy_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiObjectKeyValue
        """
        return self._n_hierarchy_value

    @n_hierarchy_value.setter
    def n_hierarchy_value(self, n_hierarchy_value):
        """Sets the n_hierarchy_value of this ConquestApiAnyValue.


        :param n_hierarchy_value: The n_hierarchy_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiObjectKeyValue
        """

        self._n_hierarchy_value = n_hierarchy_value

    @property
    def n_int32_value(self):
        """Gets the n_int32_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_int32_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: int
        """
        return self._n_int32_value

    @n_int32_value.setter
    def n_int32_value(self, n_int32_value):
        """Sets the n_int32_value of this ConquestApiAnyValue.


        :param n_int32_value: The n_int32_value of this ConquestApiAnyValue.  # noqa: E501
        :type: int
        """

        self._n_int32_value = n_int32_value

    @property
    def n_int64_value(self):
        """Gets the n_int64_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_int64_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: str
        """
        return self._n_int64_value

    @n_int64_value.setter
    def n_int64_value(self, n_int64_value):
        """Sets the n_int64_value of this ConquestApiAnyValue.


        :param n_int64_value: The n_int64_value of this ConquestApiAnyValue.  # noqa: E501
        :type: str
        """

        self._n_int64_value = n_int64_value

    @property
    def n_number_value(self):
        """Gets the n_number_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_number_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: float
        """
        return self._n_number_value

    @n_number_value.setter
    def n_number_value(self, n_number_value):
        """Sets the n_number_value of this ConquestApiAnyValue.


        :param n_number_value: The n_number_value of this ConquestApiAnyValue.  # noqa: E501
        :type: float
        """

        self._n_number_value = n_number_value

    @property
    def n_object_key_value(self):
        """Gets the n_object_key_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_object_key_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiObjectKeyValue
        """
        return self._n_object_key_value

    @n_object_key_value.setter
    def n_object_key_value(self, n_object_key_value):
        """Sets the n_object_key_value of this ConquestApiAnyValue.


        :param n_object_key_value: The n_object_key_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiObjectKeyValue
        """

        self._n_object_key_value = n_object_key_value

    @property
    def n_string_value(self):
        """Gets the n_string_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The n_string_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: str
        """
        return self._n_string_value

    @n_string_value.setter
    def n_string_value(self, n_string_value):
        """Sets the n_string_value of this ConquestApiAnyValue.


        :param n_string_value: The n_string_value of this ConquestApiAnyValue.  # noqa: E501
        :type: str
        """

        self._n_string_value = n_string_value

    @property
    def number_value(self):
        """Gets the number_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The number_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: float
        """
        return self._number_value

    @number_value.setter
    def number_value(self, number_value):
        """Sets the number_value of this ConquestApiAnyValue.


        :param number_value: The number_value of this ConquestApiAnyValue.  # noqa: E501
        :type: float
        """

        self._number_value = number_value

    @property
    def object_key_value(self):
        """Gets the object_key_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The object_key_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiObjectKey
        """
        return self._object_key_value

    @object_key_value.setter
    def object_key_value(self, object_key_value):
        """Sets the object_key_value of this ConquestApiAnyValue.


        :param object_key_value: The object_key_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiObjectKey
        """

        self._object_key_value = object_key_value

    @property
    def string_list_value(self):
        """Gets the string_list_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The string_list_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiStringListValue
        """
        return self._string_list_value

    @string_list_value.setter
    def string_list_value(self, string_list_value):
        """Sets the string_list_value of this ConquestApiAnyValue.


        :param string_list_value: The string_list_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiStringListValue
        """

        self._string_list_value = string_list_value

    @property
    def string_value(self):
        """Gets the string_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The string_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this ConquestApiAnyValue.


        :param string_value: The string_value of this ConquestApiAnyValue.  # noqa: E501
        :type: str
        """

        self._string_value = string_value

    @property
    def style_value(self):
        """Gets the style_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The style_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: ConquestApiStyle
        """
        return self._style_value

    @style_value.setter
    def style_value(self, style_value):
        """Sets the style_value of this ConquestApiAnyValue.


        :param style_value: The style_value of this ConquestApiAnyValue.  # noqa: E501
        :type: ConquestApiStyle
        """

        self._style_value = style_value

    @property
    def unknown_value(self):
        """Gets the unknown_value of this ConquestApiAnyValue.  # noqa: E501


        :return: The unknown_value of this ConquestApiAnyValue.  # noqa: E501
        :rtype: bool
        """
        return self._unknown_value

    @unknown_value.setter
    def unknown_value(self, unknown_value):
        """Sets the unknown_value of this ConquestApiAnyValue.


        :param unknown_value: The unknown_value of this ConquestApiAnyValue.  # noqa: E501
        :type: bool
        """

        self._unknown_value = unknown_value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiAnyValue, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiAnyValue):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
