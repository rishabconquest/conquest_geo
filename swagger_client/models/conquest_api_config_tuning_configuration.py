# coding: utf-8

"""
    Conquest API v4

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ConquestApiConfigTuningConfiguration(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'disable_python_extensions': 'bool',
        'enable_extension_hub': 'bool',
        'gateway_establish_connection_timeout_ms': 'int',
        'import_geometries_only': 'bool',
        'import_without_extensions': 'bool',
        'max_data_set_size': 'int',
        'max_data_set_size_for_map_objects': 'int'
    }

    attribute_map = {
        'disable_python_extensions': 'disable_python_extensions',
        'enable_extension_hub': 'enable_extension_hub',
        'gateway_establish_connection_timeout_ms': 'gateway_establish_connection_timeout_ms',
        'import_geometries_only': 'import_geometries_only',
        'import_without_extensions': 'import_without_extensions',
        'max_data_set_size': 'max_data_set_size',
        'max_data_set_size_for_map_objects': 'max_data_set_size_for_map_objects'
    }

    def __init__(self, disable_python_extensions=None, enable_extension_hub=None, gateway_establish_connection_timeout_ms=None, import_geometries_only=None, import_without_extensions=None, max_data_set_size=None, max_data_set_size_for_map_objects=None):  # noqa: E501
        """ConquestApiConfigTuningConfiguration - a model defined in Swagger"""  # noqa: E501
        self._disable_python_extensions = None
        self._enable_extension_hub = None
        self._gateway_establish_connection_timeout_ms = None
        self._import_geometries_only = None
        self._import_without_extensions = None
        self._max_data_set_size = None
        self._max_data_set_size_for_map_objects = None
        self.discriminator = None
        if disable_python_extensions is not None:
            self.disable_python_extensions = disable_python_extensions
        if enable_extension_hub is not None:
            self.enable_extension_hub = enable_extension_hub
        if gateway_establish_connection_timeout_ms is not None:
            self.gateway_establish_connection_timeout_ms = gateway_establish_connection_timeout_ms
        if import_geometries_only is not None:
            self.import_geometries_only = import_geometries_only
        if import_without_extensions is not None:
            self.import_without_extensions = import_without_extensions
        if max_data_set_size is not None:
            self.max_data_set_size = max_data_set_size
        if max_data_set_size_for_map_objects is not None:
            self.max_data_set_size_for_map_objects = max_data_set_size_for_map_objects

    @property
    def disable_python_extensions(self):
        """Gets the disable_python_extensions of this ConquestApiConfigTuningConfiguration.  # noqa: E501


        :return: The disable_python_extensions of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._disable_python_extensions

    @disable_python_extensions.setter
    def disable_python_extensions(self, disable_python_extensions):
        """Sets the disable_python_extensions of this ConquestApiConfigTuningConfiguration.


        :param disable_python_extensions: The disable_python_extensions of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :type: bool
        """

        self._disable_python_extensions = disable_python_extensions

    @property
    def enable_extension_hub(self):
        """Gets the enable_extension_hub of this ConquestApiConfigTuningConfiguration.  # noqa: E501


        :return: The enable_extension_hub of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._enable_extension_hub

    @enable_extension_hub.setter
    def enable_extension_hub(self, enable_extension_hub):
        """Sets the enable_extension_hub of this ConquestApiConfigTuningConfiguration.


        :param enable_extension_hub: The enable_extension_hub of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :type: bool
        """

        self._enable_extension_hub = enable_extension_hub

    @property
    def gateway_establish_connection_timeout_ms(self):
        """Gets the gateway_establish_connection_timeout_ms of this ConquestApiConfigTuningConfiguration.  # noqa: E501


        :return: The gateway_establish_connection_timeout_ms of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :rtype: int
        """
        return self._gateway_establish_connection_timeout_ms

    @gateway_establish_connection_timeout_ms.setter
    def gateway_establish_connection_timeout_ms(self, gateway_establish_connection_timeout_ms):
        """Sets the gateway_establish_connection_timeout_ms of this ConquestApiConfigTuningConfiguration.


        :param gateway_establish_connection_timeout_ms: The gateway_establish_connection_timeout_ms of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :type: int
        """

        self._gateway_establish_connection_timeout_ms = gateway_establish_connection_timeout_ms

    @property
    def import_geometries_only(self):
        """Gets the import_geometries_only of this ConquestApiConfigTuningConfiguration.  # noqa: E501

        importGeometriesOnly: (default = false)   when true, the geopackage import will save the geometries without going through the   business rule layer. This may significantly improve the importer's performance.  # noqa: E501

        :return: The import_geometries_only of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._import_geometries_only

    @import_geometries_only.setter
    def import_geometries_only(self, import_geometries_only):
        """Sets the import_geometries_only of this ConquestApiConfigTuningConfiguration.

        importGeometriesOnly: (default = false)   when true, the geopackage import will save the geometries without going through the   business rule layer. This may significantly improve the importer's performance.  # noqa: E501

        :param import_geometries_only: The import_geometries_only of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :type: bool
        """

        self._import_geometries_only = import_geometries_only

    @property
    def import_without_extensions(self):
        """Gets the import_without_extensions of this ConquestApiConfigTuningConfiguration.  # noqa: E501

        importWithoutExtensions: (default = false)   when true, python extension code will be ignored.  # noqa: E501

        :return: The import_without_extensions of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._import_without_extensions

    @import_without_extensions.setter
    def import_without_extensions(self, import_without_extensions):
        """Sets the import_without_extensions of this ConquestApiConfigTuningConfiguration.

        importWithoutExtensions: (default = false)   when true, python extension code will be ignored.  # noqa: E501

        :param import_without_extensions: The import_without_extensions of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :type: bool
        """

        self._import_without_extensions = import_without_extensions

    @property
    def max_data_set_size(self):
        """Gets the max_data_set_size of this ConquestApiConfigTuningConfiguration.  # noqa: E501

        maxDataSetSize: (default = 3000, max = 3000)   request responses must reliably fit within 4mb. 3000 is suitable for this case.   Reduce this value if you experience problems with request timeouts or cancellations   if a customer has datasets with lots of columns.   This is used by the FindQuery endpoints.  # noqa: E501

        :return: The max_data_set_size of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :rtype: int
        """
        return self._max_data_set_size

    @max_data_set_size.setter
    def max_data_set_size(self, max_data_set_size):
        """Sets the max_data_set_size of this ConquestApiConfigTuningConfiguration.

        maxDataSetSize: (default = 3000, max = 3000)   request responses must reliably fit within 4mb. 3000 is suitable for this case.   Reduce this value if you experience problems with request timeouts or cancellations   if a customer has datasets with lots of columns.   This is used by the FindQuery endpoints.  # noqa: E501

        :param max_data_set_size: The max_data_set_size of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :type: int
        """

        self._max_data_set_size = max_data_set_size

    @property
    def max_data_set_size_for_map_objects(self):
        """Gets the max_data_set_size_for_map_objects of this ConquestApiConfigTuningConfiguration.  # noqa: E501

        maxDataSetSizeForMapObjects: (default = 10000, max = 10000)   request responses must reliably fit within 4mb. 10000 is suitable for this case.   Reduce this value if you experience problems with request timeouts or cancellations.   This is used by the FindQuery endpoints.  # noqa: E501

        :return: The max_data_set_size_for_map_objects of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :rtype: int
        """
        return self._max_data_set_size_for_map_objects

    @max_data_set_size_for_map_objects.setter
    def max_data_set_size_for_map_objects(self, max_data_set_size_for_map_objects):
        """Sets the max_data_set_size_for_map_objects of this ConquestApiConfigTuningConfiguration.

        maxDataSetSizeForMapObjects: (default = 10000, max = 10000)   request responses must reliably fit within 4mb. 10000 is suitable for this case.   Reduce this value if you experience problems with request timeouts or cancellations.   This is used by the FindQuery endpoints.  # noqa: E501

        :param max_data_set_size_for_map_objects: The max_data_set_size_for_map_objects of this ConquestApiConfigTuningConfiguration.  # noqa: E501
        :type: int
        """

        self._max_data_set_size_for_map_objects = max_data_set_size_for_map_objects

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiConfigTuningConfiguration, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiConfigTuningConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
