# coding: utf-8

"""
    Conquest API v2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ..configuration import Configuration


class ConquestApiRelatedDocument(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'address': 'str',
        'content_type': 'str',
        'created': 'ConquestApiTimestampValue',
        'created_by': 'str',
        'doc_id': 'int',
        'document_description': 'str',
        'document_type': 'str',
        'image_order': 'int',
        'parent_id': 'int',
        'save_operation': 'str',
        'status': 'str',
        'used_in_work_order': 'bool'
    }

    attribute_map = {
        'address': 'Address',
        'content_type': 'ContentType',
        'created': 'Created',
        'created_by': 'CreatedBy',
        'doc_id': 'DocID',
        'document_description': 'DocumentDescription',
        'document_type': 'DocumentType',
        'image_order': 'ImageOrder',
        'parent_id': 'ParentID',
        'save_operation': 'SaveOperation',
        'status': 'Status',
        'used_in_work_order': 'UsedInWorkOrder'
    }

    def __init__(self, address=None, content_type=None, created=None, created_by=None, doc_id=None, document_description=None, document_type=None, image_order=None, parent_id=None, save_operation=None, status=None, used_in_work_order=None, _configuration=None):  # noqa: E501
        """ConquestApiRelatedDocument - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._address = None
        self._content_type = None
        self._created = None
        self._created_by = None
        self._doc_id = None
        self._document_description = None
        self._document_type = None
        self._image_order = None
        self._parent_id = None
        self._save_operation = None
        self._status = None
        self._used_in_work_order = None
        self.discriminator = None

        if address is not None:
            self.address = address
        if content_type is not None:
            self.content_type = content_type
        if created is not None:
            self.created = created
        if created_by is not None:
            self.created_by = created_by
        if doc_id is not None:
            self.doc_id = doc_id
        if document_description is not None:
            self.document_description = document_description
        if document_type is not None:
            self.document_type = document_type
        if image_order is not None:
            self.image_order = image_order
        if parent_id is not None:
            self.parent_id = parent_id
        if save_operation is not None:
            self.save_operation = save_operation
        if status is not None:
            self.status = status
        if used_in_work_order is not None:
            self.used_in_work_order = used_in_work_order

    @property
    def address(self):
        """Gets the address of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The address of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ConquestApiRelatedDocument.


        :param address: The address of this ConquestApiRelatedDocument.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def content_type(self):
        """Gets the content_type of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The content_type of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this ConquestApiRelatedDocument.


        :param content_type: The content_type of this ConquestApiRelatedDocument.  # noqa: E501
        :type: str
        """

        self._content_type = content_type

    @property
    def created(self):
        """Gets the created of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The created of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: ConquestApiTimestampValue
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ConquestApiRelatedDocument.


        :param created: The created of this ConquestApiRelatedDocument.  # noqa: E501
        :type: ConquestApiTimestampValue
        """

        self._created = created

    @property
    def created_by(self):
        """Gets the created_by of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The created_by of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ConquestApiRelatedDocument.


        :param created_by: The created_by of this ConquestApiRelatedDocument.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def doc_id(self):
        """Gets the doc_id of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The doc_id of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: int
        """
        return self._doc_id

    @doc_id.setter
    def doc_id(self, doc_id):
        """Sets the doc_id of this ConquestApiRelatedDocument.


        :param doc_id: The doc_id of this ConquestApiRelatedDocument.  # noqa: E501
        :type: int
        """

        self._doc_id = doc_id

    @property
    def document_description(self):
        """Gets the document_description of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The document_description of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: str
        """
        return self._document_description

    @document_description.setter
    def document_description(self, document_description):
        """Sets the document_description of this ConquestApiRelatedDocument.


        :param document_description: The document_description of this ConquestApiRelatedDocument.  # noqa: E501
        :type: str
        """

        self._document_description = document_description

    @property
    def document_type(self):
        """Gets the document_type of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The document_type of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this ConquestApiRelatedDocument.


        :param document_type: The document_type of this ConquestApiRelatedDocument.  # noqa: E501
        :type: str
        """

        self._document_type = document_type

    @property
    def image_order(self):
        """Gets the image_order of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The image_order of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: int
        """
        return self._image_order

    @image_order.setter
    def image_order(self, image_order):
        """Sets the image_order of this ConquestApiRelatedDocument.


        :param image_order: The image_order of this ConquestApiRelatedDocument.  # noqa: E501
        :type: int
        """

        self._image_order = image_order

    @property
    def parent_id(self):
        """Gets the parent_id of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The parent_id of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this ConquestApiRelatedDocument.


        :param parent_id: The parent_id of this ConquestApiRelatedDocument.  # noqa: E501
        :type: int
        """

        self._parent_id = parent_id

    @property
    def save_operation(self):
        """Gets the save_operation of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The save_operation of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: str
        """
        return self._save_operation

    @save_operation.setter
    def save_operation(self, save_operation):
        """Sets the save_operation of this ConquestApiRelatedDocument.


        :param save_operation: The save_operation of this ConquestApiRelatedDocument.  # noqa: E501
        :type: str
        """

        self._save_operation = save_operation

    @property
    def status(self):
        """Gets the status of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The status of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ConquestApiRelatedDocument.


        :param status: The status of this ConquestApiRelatedDocument.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def used_in_work_order(self):
        """Gets the used_in_work_order of this ConquestApiRelatedDocument.  # noqa: E501


        :return: The used_in_work_order of this ConquestApiRelatedDocument.  # noqa: E501
        :rtype: bool
        """
        return self._used_in_work_order

    @used_in_work_order.setter
    def used_in_work_order(self, used_in_work_order):
        """Sets the used_in_work_order of this ConquestApiRelatedDocument.


        :param used_in_work_order: The used_in_work_order of this ConquestApiRelatedDocument.  # noqa: E501
        :type: bool
        """

        self._used_in_work_order = used_in_work_order

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiRelatedDocument, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiRelatedDocument):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ConquestApiRelatedDocument):
            return True

        return self.to_dict() != other.to_dict()
