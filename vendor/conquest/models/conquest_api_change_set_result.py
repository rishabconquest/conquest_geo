# coding: utf-8

"""
    Conquest API v2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ..configuration import Configuration


class ConquestApiChangeSetResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'accepted': 'bool',
        'editor': 'str',
        'last_edit': 'datetime',
        'object_key': 'ConquestApiObjectKey'
    }

    attribute_map = {
        'accepted': 'Accepted',
        'editor': 'Editor',
        'last_edit': 'LastEdit',
        'object_key': 'ObjectKey'
    }

    def __init__(self, accepted=None, editor=None, last_edit=None, object_key=None, _configuration=None):  # noqa: E501
        """ConquestApiChangeSetResult - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._accepted = None
        self._editor = None
        self._last_edit = None
        self._object_key = None
        self.discriminator = None

        if accepted is not None:
            self.accepted = accepted
        if editor is not None:
            self.editor = editor
        if last_edit is not None:
            self.last_edit = last_edit
        if object_key is not None:
            self.object_key = object_key

    @property
    def accepted(self):
        """Gets the accepted of this ConquestApiChangeSetResult.  # noqa: E501


        :return: The accepted of this ConquestApiChangeSetResult.  # noqa: E501
        :rtype: bool
        """
        return self._accepted

    @accepted.setter
    def accepted(self, accepted):
        """Sets the accepted of this ConquestApiChangeSetResult.


        :param accepted: The accepted of this ConquestApiChangeSetResult.  # noqa: E501
        :type: bool
        """

        self._accepted = accepted

    @property
    def editor(self):
        """Gets the editor of this ConquestApiChangeSetResult.  # noqa: E501


        :return: The editor of this ConquestApiChangeSetResult.  # noqa: E501
        :rtype: str
        """
        return self._editor

    @editor.setter
    def editor(self, editor):
        """Sets the editor of this ConquestApiChangeSetResult.


        :param editor: The editor of this ConquestApiChangeSetResult.  # noqa: E501
        :type: str
        """

        self._editor = editor

    @property
    def last_edit(self):
        """Gets the last_edit of this ConquestApiChangeSetResult.  # noqa: E501


        :return: The last_edit of this ConquestApiChangeSetResult.  # noqa: E501
        :rtype: datetime
        """
        return self._last_edit

    @last_edit.setter
    def last_edit(self, last_edit):
        """Sets the last_edit of this ConquestApiChangeSetResult.


        :param last_edit: The last_edit of this ConquestApiChangeSetResult.  # noqa: E501
        :type: datetime
        """

        self._last_edit = last_edit

    @property
    def object_key(self):
        """Gets the object_key of this ConquestApiChangeSetResult.  # noqa: E501


        :return: The object_key of this ConquestApiChangeSetResult.  # noqa: E501
        :rtype: ConquestApiObjectKey
        """
        return self._object_key

    @object_key.setter
    def object_key(self, object_key):
        """Sets the object_key of this ConquestApiChangeSetResult.


        :param object_key: The object_key of this ConquestApiChangeSetResult.  # noqa: E501
        :type: ConquestApiObjectKey
        """

        self._object_key = object_key

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiChangeSetResult, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiChangeSetResult):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ConquestApiChangeSetResult):
            return True

        return self.to_dict() != other.to_dict()
