# coding: utf-8

"""
    Conquest API v2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ..configuration import Configuration


class ConquestApiRequestRecord(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account': 'str',
        'address': 'str',
        'completion_date': 'ConquestApiTimestampValue',
        'date_required': 'ConquestApiTimestampValue',
        'document_reference': 'str',
        'email': 'str',
        'entry_date': 'datetime',
        'fax': 'str',
        'geometry_data': 'ConquestApiGeometryDataValue',
        'home_phone': 'str',
        'location': 'str',
        'location_coordinates': 'ConquestApiGeographyDataValue',
        'mobile_phone': 'str',
        'organisation_unit_id': 'int',
        'post_code': 'str',
        'received_by': 'str',
        'received_method': 'int',
        'request_category': 'int',
        'request_detail': 'str',
        'requestor_name': 'str',
        'requestor_type': 'int',
        'response': 'int',
        'status': 'int',
        'suburb': 'str',
        'urgency': 'int',
        'work_phone': 'str'
    }

    attribute_map = {
        'account': 'Account',
        'address': 'Address',
        'completion_date': 'CompletionDate',
        'date_required': 'DateRequired',
        'document_reference': 'DocumentReference',
        'email': 'Email',
        'entry_date': 'EntryDate',
        'fax': 'Fax',
        'geometry_data': 'GeometryData',
        'home_phone': 'HomePhone',
        'location': 'Location',
        'location_coordinates': 'LocationCoordinates',
        'mobile_phone': 'MobilePhone',
        'organisation_unit_id': 'OrganisationUnitID',
        'post_code': 'PostCode',
        'received_by': 'ReceivedBy',
        'received_method': 'ReceivedMethod',
        'request_category': 'RequestCategory',
        'request_detail': 'RequestDetail',
        'requestor_name': 'RequestorName',
        'requestor_type': 'RequestorType',
        'response': 'Response',
        'status': 'Status',
        'suburb': 'Suburb',
        'urgency': 'Urgency',
        'work_phone': 'WorkPhone'
    }

    def __init__(self, account=None, address=None, completion_date=None, date_required=None, document_reference=None, email=None, entry_date=None, fax=None, geometry_data=None, home_phone=None, location=None, location_coordinates=None, mobile_phone=None, organisation_unit_id=None, post_code=None, received_by=None, received_method=None, request_category=None, request_detail=None, requestor_name=None, requestor_type=None, response=None, status=None, suburb=None, urgency=None, work_phone=None, _configuration=None):  # noqa: E501
        """ConquestApiRequestRecord - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._account = None
        self._address = None
        self._completion_date = None
        self._date_required = None
        self._document_reference = None
        self._email = None
        self._entry_date = None
        self._fax = None
        self._geometry_data = None
        self._home_phone = None
        self._location = None
        self._location_coordinates = None
        self._mobile_phone = None
        self._organisation_unit_id = None
        self._post_code = None
        self._received_by = None
        self._received_method = None
        self._request_category = None
        self._request_detail = None
        self._requestor_name = None
        self._requestor_type = None
        self._response = None
        self._status = None
        self._suburb = None
        self._urgency = None
        self._work_phone = None
        self.discriminator = None

        if account is not None:
            self.account = account
        if address is not None:
            self.address = address
        if completion_date is not None:
            self.completion_date = completion_date
        if date_required is not None:
            self.date_required = date_required
        if document_reference is not None:
            self.document_reference = document_reference
        if email is not None:
            self.email = email
        if entry_date is not None:
            self.entry_date = entry_date
        if fax is not None:
            self.fax = fax
        if geometry_data is not None:
            self.geometry_data = geometry_data
        if home_phone is not None:
            self.home_phone = home_phone
        if location is not None:
            self.location = location
        if location_coordinates is not None:
            self.location_coordinates = location_coordinates
        if mobile_phone is not None:
            self.mobile_phone = mobile_phone
        if organisation_unit_id is not None:
            self.organisation_unit_id = organisation_unit_id
        if post_code is not None:
            self.post_code = post_code
        if received_by is not None:
            self.received_by = received_by
        if received_method is not None:
            self.received_method = received_method
        if request_category is not None:
            self.request_category = request_category
        if request_detail is not None:
            self.request_detail = request_detail
        if requestor_name is not None:
            self.requestor_name = requestor_name
        if requestor_type is not None:
            self.requestor_type = requestor_type
        if response is not None:
            self.response = response
        if status is not None:
            self.status = status
        if suburb is not None:
            self.suburb = suburb
        if urgency is not None:
            self.urgency = urgency
        if work_phone is not None:
            self.work_phone = work_phone

    @property
    def account(self):
        """Gets the account of this ConquestApiRequestRecord.  # noqa: E501


        :return: The account of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this ConquestApiRequestRecord.


        :param account: The account of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._account = account

    @property
    def address(self):
        """Gets the address of this ConquestApiRequestRecord.  # noqa: E501


        :return: The address of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ConquestApiRequestRecord.


        :param address: The address of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def completion_date(self):
        """Gets the completion_date of this ConquestApiRequestRecord.  # noqa: E501


        :return: The completion_date of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: ConquestApiTimestampValue
        """
        return self._completion_date

    @completion_date.setter
    def completion_date(self, completion_date):
        """Sets the completion_date of this ConquestApiRequestRecord.


        :param completion_date: The completion_date of this ConquestApiRequestRecord.  # noqa: E501
        :type: ConquestApiTimestampValue
        """

        self._completion_date = completion_date

    @property
    def date_required(self):
        """Gets the date_required of this ConquestApiRequestRecord.  # noqa: E501


        :return: The date_required of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: ConquestApiTimestampValue
        """
        return self._date_required

    @date_required.setter
    def date_required(self, date_required):
        """Sets the date_required of this ConquestApiRequestRecord.


        :param date_required: The date_required of this ConquestApiRequestRecord.  # noqa: E501
        :type: ConquestApiTimestampValue
        """

        self._date_required = date_required

    @property
    def document_reference(self):
        """Gets the document_reference of this ConquestApiRequestRecord.  # noqa: E501


        :return: The document_reference of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._document_reference

    @document_reference.setter
    def document_reference(self, document_reference):
        """Sets the document_reference of this ConquestApiRequestRecord.


        :param document_reference: The document_reference of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._document_reference = document_reference

    @property
    def email(self):
        """Gets the email of this ConquestApiRequestRecord.  # noqa: E501


        :return: The email of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ConquestApiRequestRecord.


        :param email: The email of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def entry_date(self):
        """Gets the entry_date of this ConquestApiRequestRecord.  # noqa: E501


        :return: The entry_date of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: datetime
        """
        return self._entry_date

    @entry_date.setter
    def entry_date(self, entry_date):
        """Sets the entry_date of this ConquestApiRequestRecord.


        :param entry_date: The entry_date of this ConquestApiRequestRecord.  # noqa: E501
        :type: datetime
        """

        self._entry_date = entry_date

    @property
    def fax(self):
        """Gets the fax of this ConquestApiRequestRecord.  # noqa: E501


        :return: The fax of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this ConquestApiRequestRecord.


        :param fax: The fax of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._fax = fax

    @property
    def geometry_data(self):
        """Gets the geometry_data of this ConquestApiRequestRecord.  # noqa: E501


        :return: The geometry_data of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: ConquestApiGeometryDataValue
        """
        return self._geometry_data

    @geometry_data.setter
    def geometry_data(self, geometry_data):
        """Sets the geometry_data of this ConquestApiRequestRecord.


        :param geometry_data: The geometry_data of this ConquestApiRequestRecord.  # noqa: E501
        :type: ConquestApiGeometryDataValue
        """

        self._geometry_data = geometry_data

    @property
    def home_phone(self):
        """Gets the home_phone of this ConquestApiRequestRecord.  # noqa: E501


        :return: The home_phone of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._home_phone

    @home_phone.setter
    def home_phone(self, home_phone):
        """Sets the home_phone of this ConquestApiRequestRecord.


        :param home_phone: The home_phone of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._home_phone = home_phone

    @property
    def location(self):
        """Gets the location of this ConquestApiRequestRecord.  # noqa: E501


        :return: The location of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ConquestApiRequestRecord.


        :param location: The location of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def location_coordinates(self):
        """Gets the location_coordinates of this ConquestApiRequestRecord.  # noqa: E501


        :return: The location_coordinates of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: ConquestApiGeographyDataValue
        """
        return self._location_coordinates

    @location_coordinates.setter
    def location_coordinates(self, location_coordinates):
        """Sets the location_coordinates of this ConquestApiRequestRecord.


        :param location_coordinates: The location_coordinates of this ConquestApiRequestRecord.  # noqa: E501
        :type: ConquestApiGeographyDataValue
        """

        self._location_coordinates = location_coordinates

    @property
    def mobile_phone(self):
        """Gets the mobile_phone of this ConquestApiRequestRecord.  # noqa: E501


        :return: The mobile_phone of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._mobile_phone

    @mobile_phone.setter
    def mobile_phone(self, mobile_phone):
        """Sets the mobile_phone of this ConquestApiRequestRecord.


        :param mobile_phone: The mobile_phone of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._mobile_phone = mobile_phone

    @property
    def organisation_unit_id(self):
        """Gets the organisation_unit_id of this ConquestApiRequestRecord.  # noqa: E501


        :return: The organisation_unit_id of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: int
        """
        return self._organisation_unit_id

    @organisation_unit_id.setter
    def organisation_unit_id(self, organisation_unit_id):
        """Sets the organisation_unit_id of this ConquestApiRequestRecord.


        :param organisation_unit_id: The organisation_unit_id of this ConquestApiRequestRecord.  # noqa: E501
        :type: int
        """

        self._organisation_unit_id = organisation_unit_id

    @property
    def post_code(self):
        """Gets the post_code of this ConquestApiRequestRecord.  # noqa: E501


        :return: The post_code of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._post_code

    @post_code.setter
    def post_code(self, post_code):
        """Sets the post_code of this ConquestApiRequestRecord.


        :param post_code: The post_code of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._post_code = post_code

    @property
    def received_by(self):
        """Gets the received_by of this ConquestApiRequestRecord.  # noqa: E501


        :return: The received_by of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._received_by

    @received_by.setter
    def received_by(self, received_by):
        """Sets the received_by of this ConquestApiRequestRecord.


        :param received_by: The received_by of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._received_by = received_by

    @property
    def received_method(self):
        """Gets the received_method of this ConquestApiRequestRecord.  # noqa: E501


        :return: The received_method of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: int
        """
        return self._received_method

    @received_method.setter
    def received_method(self, received_method):
        """Sets the received_method of this ConquestApiRequestRecord.


        :param received_method: The received_method of this ConquestApiRequestRecord.  # noqa: E501
        :type: int
        """

        self._received_method = received_method

    @property
    def request_category(self):
        """Gets the request_category of this ConquestApiRequestRecord.  # noqa: E501


        :return: The request_category of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: int
        """
        return self._request_category

    @request_category.setter
    def request_category(self, request_category):
        """Sets the request_category of this ConquestApiRequestRecord.


        :param request_category: The request_category of this ConquestApiRequestRecord.  # noqa: E501
        :type: int
        """

        self._request_category = request_category

    @property
    def request_detail(self):
        """Gets the request_detail of this ConquestApiRequestRecord.  # noqa: E501


        :return: The request_detail of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._request_detail

    @request_detail.setter
    def request_detail(self, request_detail):
        """Sets the request_detail of this ConquestApiRequestRecord.


        :param request_detail: The request_detail of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._request_detail = request_detail

    @property
    def requestor_name(self):
        """Gets the requestor_name of this ConquestApiRequestRecord.  # noqa: E501


        :return: The requestor_name of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._requestor_name

    @requestor_name.setter
    def requestor_name(self, requestor_name):
        """Sets the requestor_name of this ConquestApiRequestRecord.


        :param requestor_name: The requestor_name of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._requestor_name = requestor_name

    @property
    def requestor_type(self):
        """Gets the requestor_type of this ConquestApiRequestRecord.  # noqa: E501


        :return: The requestor_type of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: int
        """
        return self._requestor_type

    @requestor_type.setter
    def requestor_type(self, requestor_type):
        """Sets the requestor_type of this ConquestApiRequestRecord.


        :param requestor_type: The requestor_type of this ConquestApiRequestRecord.  # noqa: E501
        :type: int
        """

        self._requestor_type = requestor_type

    @property
    def response(self):
        """Gets the response of this ConquestApiRequestRecord.  # noqa: E501


        :return: The response of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: int
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this ConquestApiRequestRecord.


        :param response: The response of this ConquestApiRequestRecord.  # noqa: E501
        :type: int
        """

        self._response = response

    @property
    def status(self):
        """Gets the status of this ConquestApiRequestRecord.  # noqa: E501


        :return: The status of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ConquestApiRequestRecord.


        :param status: The status of this ConquestApiRequestRecord.  # noqa: E501
        :type: int
        """

        self._status = status

    @property
    def suburb(self):
        """Gets the suburb of this ConquestApiRequestRecord.  # noqa: E501


        :return: The suburb of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._suburb

    @suburb.setter
    def suburb(self, suburb):
        """Sets the suburb of this ConquestApiRequestRecord.


        :param suburb: The suburb of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._suburb = suburb

    @property
    def urgency(self):
        """Gets the urgency of this ConquestApiRequestRecord.  # noqa: E501


        :return: The urgency of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: int
        """
        return self._urgency

    @urgency.setter
    def urgency(self, urgency):
        """Sets the urgency of this ConquestApiRequestRecord.


        :param urgency: The urgency of this ConquestApiRequestRecord.  # noqa: E501
        :type: int
        """

        self._urgency = urgency

    @property
    def work_phone(self):
        """Gets the work_phone of this ConquestApiRequestRecord.  # noqa: E501


        :return: The work_phone of this ConquestApiRequestRecord.  # noqa: E501
        :rtype: str
        """
        return self._work_phone

    @work_phone.setter
    def work_phone(self, work_phone):
        """Sets the work_phone of this ConquestApiRequestRecord.


        :param work_phone: The work_phone of this ConquestApiRequestRecord.  # noqa: E501
        :type: str
        """

        self._work_phone = work_phone

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiRequestRecord, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiRequestRecord):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ConquestApiRequestRecord):
            return True

        return self.to_dict() != other.to_dict()
