# coding: utf-8

"""
    Conquest API v2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ..configuration import Configuration


class ConquestApiAssetInspectionEntity(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'asset_id': 'int',
        'asset_inspection_id': 'int',
        'attribute_id': 'int',
        'edit_date': 'datetime',
        'editor': 'str',
        'inspection_id': 'int',
        'record': 'ConquestApiAssetInspectionRecord',
        'std_inspection_id': 'int',
        'lock': 'ConquestApiLock'
    }

    attribute_map = {
        'asset_id': 'AssetID',
        'asset_inspection_id': 'AssetInspectionID',
        'attribute_id': 'AttributeID',
        'edit_date': 'EditDate',
        'editor': 'Editor',
        'inspection_id': 'InspectionID',
        'record': 'Record',
        'std_inspection_id': 'StdInspectionID',
        'lock': 'lock'
    }

    def __init__(self, asset_id=None, asset_inspection_id=None, attribute_id=None, edit_date=None, editor=None, inspection_id=None, record=None, std_inspection_id=None, lock=None, _configuration=None):  # noqa: E501
        """ConquestApiAssetInspectionEntity - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._asset_id = None
        self._asset_inspection_id = None
        self._attribute_id = None
        self._edit_date = None
        self._editor = None
        self._inspection_id = None
        self._record = None
        self._std_inspection_id = None
        self._lock = None
        self.discriminator = None

        if asset_id is not None:
            self.asset_id = asset_id
        if asset_inspection_id is not None:
            self.asset_inspection_id = asset_inspection_id
        if attribute_id is not None:
            self.attribute_id = attribute_id
        if edit_date is not None:
            self.edit_date = edit_date
        if editor is not None:
            self.editor = editor
        if inspection_id is not None:
            self.inspection_id = inspection_id
        if record is not None:
            self.record = record
        if std_inspection_id is not None:
            self.std_inspection_id = std_inspection_id
        if lock is not None:
            self.lock = lock

    @property
    def asset_id(self):
        """Gets the asset_id of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The asset_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: int
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this ConquestApiAssetInspectionEntity.


        :param asset_id: The asset_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: int
        """

        self._asset_id = asset_id

    @property
    def asset_inspection_id(self):
        """Gets the asset_inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The asset_inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: int
        """
        return self._asset_inspection_id

    @asset_inspection_id.setter
    def asset_inspection_id(self, asset_inspection_id):
        """Sets the asset_inspection_id of this ConquestApiAssetInspectionEntity.


        :param asset_inspection_id: The asset_inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: int
        """

        self._asset_inspection_id = asset_inspection_id

    @property
    def attribute_id(self):
        """Gets the attribute_id of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The attribute_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: int
        """
        return self._attribute_id

    @attribute_id.setter
    def attribute_id(self, attribute_id):
        """Sets the attribute_id of this ConquestApiAssetInspectionEntity.


        :param attribute_id: The attribute_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: int
        """

        self._attribute_id = attribute_id

    @property
    def edit_date(self):
        """Gets the edit_date of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The edit_date of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: datetime
        """
        return self._edit_date

    @edit_date.setter
    def edit_date(self, edit_date):
        """Sets the edit_date of this ConquestApiAssetInspectionEntity.


        :param edit_date: The edit_date of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: datetime
        """

        self._edit_date = edit_date

    @property
    def editor(self):
        """Gets the editor of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The editor of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: str
        """
        return self._editor

    @editor.setter
    def editor(self, editor):
        """Sets the editor of this ConquestApiAssetInspectionEntity.


        :param editor: The editor of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: str
        """

        self._editor = editor

    @property
    def inspection_id(self):
        """Gets the inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: int
        """
        return self._inspection_id

    @inspection_id.setter
    def inspection_id(self, inspection_id):
        """Sets the inspection_id of this ConquestApiAssetInspectionEntity.


        :param inspection_id: The inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: int
        """

        self._inspection_id = inspection_id

    @property
    def record(self):
        """Gets the record of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The record of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: ConquestApiAssetInspectionRecord
        """
        return self._record

    @record.setter
    def record(self, record):
        """Sets the record of this ConquestApiAssetInspectionEntity.


        :param record: The record of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: ConquestApiAssetInspectionRecord
        """

        self._record = record

    @property
    def std_inspection_id(self):
        """Gets the std_inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The std_inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: int
        """
        return self._std_inspection_id

    @std_inspection_id.setter
    def std_inspection_id(self, std_inspection_id):
        """Sets the std_inspection_id of this ConquestApiAssetInspectionEntity.


        :param std_inspection_id: The std_inspection_id of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: int
        """

        self._std_inspection_id = std_inspection_id

    @property
    def lock(self):
        """Gets the lock of this ConquestApiAssetInspectionEntity.  # noqa: E501


        :return: The lock of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :rtype: ConquestApiLock
        """
        return self._lock

    @lock.setter
    def lock(self, lock):
        """Sets the lock of this ConquestApiAssetInspectionEntity.


        :param lock: The lock of this ConquestApiAssetInspectionEntity.  # noqa: E501
        :type: ConquestApiLock
        """

        self._lock = lock

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiAssetInspectionEntity, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiAssetInspectionEntity):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ConquestApiAssetInspectionEntity):
            return True

        return self.to_dict() != other.to_dict()
