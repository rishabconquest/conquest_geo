# coding: utf-8

"""
    Conquest API v2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ..configuration import Configuration


class ConquestApiGetDocumentsQuery(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'object_key': 'ConquestApiObjectKey',
        'with_create_times': 'list[datetime]',
        'with_document_i_ds': 'list[int]',
        'with_upload_status': 'list[ConquestApiUploadStatus]'
    }

    attribute_map = {
        'object_key': 'ObjectKey',
        'with_create_times': 'WithCreateTimes',
        'with_document_i_ds': 'WithDocumentIDs',
        'with_upload_status': 'WithUploadStatus'
    }

    def __init__(self, object_key=None, with_create_times=None, with_document_i_ds=None, with_upload_status=None, _configuration=None):  # noqa: E501
        """ConquestApiGetDocumentsQuery - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._object_key = None
        self._with_create_times = None
        self._with_document_i_ds = None
        self._with_upload_status = None
        self.discriminator = None

        if object_key is not None:
            self.object_key = object_key
        if with_create_times is not None:
            self.with_create_times = with_create_times
        if with_document_i_ds is not None:
            self.with_document_i_ds = with_document_i_ds
        if with_upload_status is not None:
            self.with_upload_status = with_upload_status

    @property
    def object_key(self):
        """Gets the object_key of this ConquestApiGetDocumentsQuery.  # noqa: E501


        :return: The object_key of this ConquestApiGetDocumentsQuery.  # noqa: E501
        :rtype: ConquestApiObjectKey
        """
        return self._object_key

    @object_key.setter
    def object_key(self, object_key):
        """Sets the object_key of this ConquestApiGetDocumentsQuery.


        :param object_key: The object_key of this ConquestApiGetDocumentsQuery.  # noqa: E501
        :type: ConquestApiObjectKey
        """

        self._object_key = object_key

    @property
    def with_create_times(self):
        """Gets the with_create_times of this ConquestApiGetDocumentsQuery.  # noqa: E501


        :return: The with_create_times of this ConquestApiGetDocumentsQuery.  # noqa: E501
        :rtype: list[datetime]
        """
        return self._with_create_times

    @with_create_times.setter
    def with_create_times(self, with_create_times):
        """Sets the with_create_times of this ConquestApiGetDocumentsQuery.


        :param with_create_times: The with_create_times of this ConquestApiGetDocumentsQuery.  # noqa: E501
        :type: list[datetime]
        """

        self._with_create_times = with_create_times

    @property
    def with_document_i_ds(self):
        """Gets the with_document_i_ds of this ConquestApiGetDocumentsQuery.  # noqa: E501


        :return: The with_document_i_ds of this ConquestApiGetDocumentsQuery.  # noqa: E501
        :rtype: list[int]
        """
        return self._with_document_i_ds

    @with_document_i_ds.setter
    def with_document_i_ds(self, with_document_i_ds):
        """Sets the with_document_i_ds of this ConquestApiGetDocumentsQuery.


        :param with_document_i_ds: The with_document_i_ds of this ConquestApiGetDocumentsQuery.  # noqa: E501
        :type: list[int]
        """

        self._with_document_i_ds = with_document_i_ds

    @property
    def with_upload_status(self):
        """Gets the with_upload_status of this ConquestApiGetDocumentsQuery.  # noqa: E501

        If unset, all statuses will be shown. When rendering this list, only those with the Completed status are downloadable.  # noqa: E501

        :return: The with_upload_status of this ConquestApiGetDocumentsQuery.  # noqa: E501
        :rtype: list[ConquestApiUploadStatus]
        """
        return self._with_upload_status

    @with_upload_status.setter
    def with_upload_status(self, with_upload_status):
        """Sets the with_upload_status of this ConquestApiGetDocumentsQuery.

        If unset, all statuses will be shown. When rendering this list, only those with the Completed status are downloadable.  # noqa: E501

        :param with_upload_status: The with_upload_status of this ConquestApiGetDocumentsQuery.  # noqa: E501
        :type: list[ConquestApiUploadStatus]
        """

        self._with_upload_status = with_upload_status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiGetDocumentsQuery, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiGetDocumentsQuery):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ConquestApiGetDocumentsQuery):
            return True

        return self.to_dict() != other.to_dict()
