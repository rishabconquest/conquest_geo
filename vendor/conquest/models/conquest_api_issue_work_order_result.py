# coding: utf-8

"""
    Conquest API v2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from ..configuration import Configuration


class ConquestApiIssueWorkOrderResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'action': 'ConquestApiActionEntity',
        'contractor_email_address': 'str',
        'related_documents': 'list[ConquestApiRelatedDocument]',
        'reports': 'list[ConquestApiReportDefinition]'
    }

    attribute_map = {
        'action': 'Action',
        'contractor_email_address': 'ContractorEmailAddress',
        'related_documents': 'RelatedDocuments',
        'reports': 'Reports'
    }

    def __init__(self, action=None, contractor_email_address=None, related_documents=None, reports=None, _configuration=None):  # noqa: E501
        """ConquestApiIssueWorkOrderResult - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._action = None
        self._contractor_email_address = None
        self._related_documents = None
        self._reports = None
        self.discriminator = None

        if action is not None:
            self.action = action
        if contractor_email_address is not None:
            self.contractor_email_address = contractor_email_address
        if related_documents is not None:
            self.related_documents = related_documents
        if reports is not None:
            self.reports = reports

    @property
    def action(self):
        """Gets the action of this ConquestApiIssueWorkOrderResult.  # noqa: E501


        :return: The action of this ConquestApiIssueWorkOrderResult.  # noqa: E501
        :rtype: ConquestApiActionEntity
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this ConquestApiIssueWorkOrderResult.


        :param action: The action of this ConquestApiIssueWorkOrderResult.  # noqa: E501
        :type: ConquestApiActionEntity
        """

        self._action = action

    @property
    def contractor_email_address(self):
        """Gets the contractor_email_address of this ConquestApiIssueWorkOrderResult.  # noqa: E501


        :return: The contractor_email_address of this ConquestApiIssueWorkOrderResult.  # noqa: E501
        :rtype: str
        """
        return self._contractor_email_address

    @contractor_email_address.setter
    def contractor_email_address(self, contractor_email_address):
        """Sets the contractor_email_address of this ConquestApiIssueWorkOrderResult.


        :param contractor_email_address: The contractor_email_address of this ConquestApiIssueWorkOrderResult.  # noqa: E501
        :type: str
        """

        self._contractor_email_address = contractor_email_address

    @property
    def related_documents(self):
        """Gets the related_documents of this ConquestApiIssueWorkOrderResult.  # noqa: E501


        :return: The related_documents of this ConquestApiIssueWorkOrderResult.  # noqa: E501
        :rtype: list[ConquestApiRelatedDocument]
        """
        return self._related_documents

    @related_documents.setter
    def related_documents(self, related_documents):
        """Sets the related_documents of this ConquestApiIssueWorkOrderResult.


        :param related_documents: The related_documents of this ConquestApiIssueWorkOrderResult.  # noqa: E501
        :type: list[ConquestApiRelatedDocument]
        """

        self._related_documents = related_documents

    @property
    def reports(self):
        """Gets the reports of this ConquestApiIssueWorkOrderResult.  # noqa: E501


        :return: The reports of this ConquestApiIssueWorkOrderResult.  # noqa: E501
        :rtype: list[ConquestApiReportDefinition]
        """
        return self._reports

    @reports.setter
    def reports(self, reports):
        """Sets the reports of this ConquestApiIssueWorkOrderResult.


        :param reports: The reports of this ConquestApiIssueWorkOrderResult.  # noqa: E501
        :type: list[ConquestApiReportDefinition]
        """

        self._reports = reports

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConquestApiIssueWorkOrderResult, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConquestApiIssueWorkOrderResult):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ConquestApiIssueWorkOrderResult):
            return True

        return self.to_dict() != other.to_dict()
